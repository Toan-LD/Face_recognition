# Form implementation generated from reading ui file 'ui/nd_khachhang.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
from PyQt5.QtGui import QPixmap,QImage
from PIL import ImageFont, ImageDraw, Image
import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from DAO.customerDAO import customerDAO
import numpy as np
import GUI.taohoadon as cbill
import GUI.thongbao as tb
from keras.models import load_model
import cv2



class Ui_Form(object):
    def setupUi(self, Form, manv):
        self.id = None
        self.manv = manv
        self.tb = tb.Ui_Dialog()
        self.model = load_model('model/modelKH.h5')
        self.flag = False
        self.camera = None 
        data_dir = 'data/khachhang'

        # Lấy danh sách tên các thư mục (tương ứng với nhãn)
        self.class_names = os.listdir(data_dir)
        
        Form.setObjectName("Form")
        Form.resize(1440, 768)
        Form.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setHorizontalSpacing(7)
        self.gridLayout.setVerticalSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.widget_2 = QtWidgets.QWidget(parent=Form)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.groupBox = QtWidgets.QGroupBox(parent=self.widget_2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lb_camera = QtWidgets.QLabel(parent=self.groupBox)
        self.lb_camera.setObjectName("lb_camera")
        self.verticalLayout_2.addWidget(self.lb_camera)
        self.lb_camera.setAlignment(QtCore.Qt.AlignCenter)
        self.widget_3 = QtWidgets.QWidget(parent=self.groupBox)
        self.widget_3.setMaximumSize(QtCore.QSize(16777215, 50))
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.widget_3)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.widget_3)
        self.pushButton_3.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("background-color: #9FC899;\n"
"border-radius: 5px")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("img/camera.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton_3.setIcon(icon)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_6.addWidget(self.pushButton_3)
        self.pushButton_3.clicked.connect(self.start_camera)
        self.pushButton_5 = QtWidgets.QPushButton(parent=self.widget_3)
        self.pushButton_5.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setStyleSheet("background-color: #BDD5D7;\n"
"border-radius: 5px")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("img/edit_48px.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton_5.setIcon(icon1)
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.createBill)
        self.horizontalLayout_6.addWidget(self.pushButton_5)
        self.verticalLayout_2.addWidget(self.widget_3)
        self.gridLayout_2.addLayout(self.verticalLayout_2, 0, 0, 1, 1)
        self.horizontalLayout_4.addWidget(self.groupBox)
        self.gridLayout.addWidget(self.widget_2, 1, 0, 1, 1)
        self.widget = QtWidgets.QWidget(parent=Form)
        self.widget.setMaximumSize(QtCore.QSize(16777215, 90))
        self.widget.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.widget.setStyleSheet("QWidget{\n"
"    background-color: #BDD5D7;\n"
"    border:1px solid black\n"
"}\n"
"QLabel{\n"
"    border:none\n"
"}\n"
"\n"
"\n"
"")
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(parent=self.widget)
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.gridLayout.addWidget(self.widget, 0, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        self._translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(self._translate("Form", "Form"))
        self.groupBox.setTitle(self._translate("Form", "CAMERA"))
        self.lb_camera.setText(self._translate("Form", 'Đã tắt camera, vui lòng bấm "Bắt đầu" để mở.'))
        self.pushButton_3.setText(self._translate("Form", "Bắt đầu"))
        self.pushButton_5.setText(self._translate("Form", "Lấy thông tin"))
        self.label.setText(self._translate("Form", "Nhận diện khách hàng"))

    def update_frame(self):
        self.face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
        ret, frame = self.camera.read()
        if ret:
            # Chuyển đổi hình ảnh từ BGR sang RGB để hiển thị trong PyQt5
            
            faces = self.face_cascade.detectMultiScale(frame, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))
            for (x, y, w, h) in faces:
                face_image = frame[y:y+h, x:x+w]
                face_image_rgb = cv2.cvtColor(face_image,cv2.COLOR_BGR2RGB)
                face_image_rgb = cv2.resize(face_image_rgb,(120,120))
                
                frame_pil = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))
                
                draw = ImageDraw.Draw(frame_pil)
                
                font = ImageFont.truetype("Arial.ttf", 30)
                
                prediction = self.model.predict(np.expand_dims(face_image_rgb, axis=0))

                if prediction.max() < 0.9:
                        self.id = None
                        label = "Unknown"
                        color = (255,0,0)
                        color_rec = (0, 0, 255)
                else:
                        self.id = self.class_names[int(np.argmax(prediction))]
                        kh = customerDAO()
                        cus = kh.findByid(self.id)
                        label = cus.get_tenkh()
                        color = (0,255,0)
                        color_rec = (0,255,0)
        
                draw.text((x + w + 10, y + h), label, font=font, fill=color)
                frame_with_text = cv2.cvtColor(np.array(frame_pil), cv2.COLOR_RGB2BGR)
            
                cv2.rectangle(frame_with_text, (x, y), (x+w, y+h), color_rec, 2)
                
                frame_rgb = cv2.cvtColor(frame_with_text, cv2.COLOR_BGR2RGB)
                frame_rgb = cv2.resize(frame_rgb,(900,600))
                
                image = QImage(frame_rgb.data, frame_rgb.shape[1], frame_rgb.shape[0], QImage.Format_RGB888)
                pixmap = QPixmap.fromImage(image)
            
                self.lb_camera.setPixmap(pixmap)
                
    def createBill(self):
            if self.id is not None:
                Dialog = QtWidgets.QDialog()
                ui = cbill.Ui_Dialog()
                ui.setupUi(Dialog,self.id,self.manv)
                self.stop_camera()
                Dialog.exec_()
            else: self.tb.thongBao("Không thể nhận diện được hoặc chưa có dữ liệu!")   
            
    def start_camera(self):
        if self.flag is False:
                self.camera = cv2.VideoCapture(0)
                self.timer = QTimer()
                self.timer.timeout.connect(self.update_frame)
                self.timer.start()
                self.pushButton_3.setText(self._translate("Form", "Dừng lại"))
                self.flag = True
        else: 
                self.stop_camera()
                self.pushButton_3.setText(self._translate("Form", "Bắt đầu"))
                self.flag = False
        
    def stop_camera(self):
        if self.camera is not None and self.camera.isOpened():
                self.camera.release()
                self.timer.stop()
                self.lb_camera.clear()
                self.lb_camera.setText('Đã tắt camera, vui lòng bấm "Bắt đầu" để mở.')
                self.id = None
        else: pass

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())
