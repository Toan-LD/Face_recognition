# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/dichvu.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from DAO.serviceDAO import serviceDAO
from DTO.serviceDTO import Service
import GUI.mesage_box as msg
from GUI.add_service_dialog import Ui_add_service_dialog

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(800, 500)
        Form.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.gridLayout_3 = QtWidgets.QGridLayout(Form)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setHorizontalSpacing(7)
        self.gridLayout_3.setVerticalSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setStyleSheet("QWidget{\n"
"background-color: rgb(133, 255, 246);    border:1px solid black\n"
"}\n"
"QLabel{\n"
"    border:none\n"
"}\n"
"\n"
"\n"
"")
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setStyleSheet("")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.gridLayout_3.addWidget(self.widget, 0, 0, 1, 1)
        self.widget_3 = QtWidgets.QWidget(Form)
        self.widget_3.setMinimumSize(QtCore.QSize(0, 0))
        self.widget_3.setObjectName("widget_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(218, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.btnAdd = QtWidgets.QPushButton(self.widget_3)
        self.btnAdd.setMinimumSize(QtCore.QSize(100, 30))
        self.btnAdd.setStyleSheet("background-color: rgb(159, 255, 153);\n"
"")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ui\\../img/add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnAdd.setIcon(icon)
        self.btnAdd.setIconSize(QtCore.QSize(20, 20))
        self.btnAdd.setObjectName("btnAdd")
        self.horizontalLayout.addWidget(self.btnAdd)
        self.btnEdit = QtWidgets.QPushButton(self.widget_3)
        self.btnEdit.setMinimumSize(QtCore.QSize(100, 30))
        self.btnEdit.setStyleSheet("background-color: rgb(255, 255, 127);\n"
"")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("ui\\../img/edit_48px.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnEdit.setIcon(icon1)
        self.btnEdit.setIconSize(QtCore.QSize(20, 20))
        self.btnEdit.setObjectName("btnEdit")
        self.horizontalLayout.addWidget(self.btnEdit)
        self.btnDelete = QtWidgets.QPushButton(self.widget_3)
        self.btnDelete.setMinimumSize(QtCore.QSize(100, 30))
        self.btnDelete.setStyleSheet("background-color: rgb(255, 124, 125);\n"
"")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("ui\\../img/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnDelete.setIcon(icon2)
        self.btnDelete.setIconSize(QtCore.QSize(20, 20))
        self.btnDelete.setObjectName("btnDelete")
        self.horizontalLayout.addWidget(self.btnDelete)
        self.btnReset = QtWidgets.QPushButton(self.widget_3)
        self.btnReset.setMinimumSize(QtCore.QSize(100, 30))
        self.btnReset.setStyleSheet("background-color: #BDD5D7;")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("ui\\../img/refresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnReset.setIcon(icon3)
        self.btnReset.setObjectName("btnReset")
        self.horizontalLayout.addWidget(self.btnReset)
        self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.widget_3, 2, 0, 1, 1)
        self.widget_2 = QtWidgets.QWidget(Form)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.widget_2)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.txtSearchService = QtWidgets.QLineEdit(self.widget_2)
        self.txtSearchService.setMinimumSize(QtCore.QSize(0, 0))
        self.txtSearchService.setObjectName("txtSearchService")
        self.horizontalLayout_2.addWidget(self.txtSearchService)
        self.cbSearch = QtWidgets.QComboBox(self.widget_2)
        self.cbSearch.setMinimumSize(QtCore.QSize(100, 0))
        self.cbSearch.setObjectName("cbSearch")
        self.cbSearch.addItem("")
        self.cbSearch.addItem("")
        self.horizontalLayout_2.addWidget(self.cbSearch)
        self.btnSearch = QtWidgets.QPushButton(self.widget_2)
        self.btnSearch.setMinimumSize(QtCore.QSize(90, 0))
        self.btnSearch.setStyleSheet("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("ui\\../img/search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnSearch.setIcon(icon4)
        self.btnSearch.setIconSize(QtCore.QSize(20, 20))
        self.btnSearch.setObjectName("btnSearch")
        self.horizontalLayout_2.addWidget(self.btnSearch)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.table_service = QtWidgets.QTableWidget(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.table_service.sizePolicy().hasHeightForWidth())
        self.table_service.setSizePolicy(sizePolicy)
        self.table_service.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.table_service.setWordWrap(False)
        self.table_service.setColumnCount(3)
        self.table_service.setObjectName("table_service")
        self.table_service.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.table_service.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.table_service.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.table_service.setHorizontalHeaderItem(2, item)
        self.table_service.horizontalHeader().setCascadingSectionResizes(False)
        self.table_service.horizontalHeader().setSortIndicatorShown(False)
        self.table_service.horizontalHeader().setStretchLastSection(True)
        self.table_service.verticalHeader().setVisible(False)
        self.table_service.verticalHeader().setCascadingSectionResizes(False)
        self.verticalLayout_2.addWidget(self.table_service)
        self.gridLayout_3.addWidget(self.widget_2, 1, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "Quản lý dịch vụ"))
        self.btnAdd.setText(_translate("Form", "Thêm"))
        self.btnEdit.setText(_translate("Form", "Sửa"))
        self.btnDelete.setText(_translate("Form", "Xoá"))
        self.btnReset.setText(_translate("Form", "Reset"))
        self.label_2.setText(_translate("Form", "Tìm kiếm "))
        self.cbSearch.setItemText(0, _translate("Form", "Mã dịch vụ"))
        self.cbSearch.setItemText(1, _translate("Form", "Tên dịch vụ"))
        self.btnSearch.setText(_translate("Form", "Tìm"))
        self.table_service.setSortingEnabled(False)
        item = self.table_service.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Mã dịch vụ"))
        item = self.table_service.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Tên dịch vụ"))
        item = self.table_service.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Giá"))
        self.loadServiceData()
        self.btnAdd.clicked.connect(self.show_add_dialog)
        self.btnEdit.clicked.connect(self.show_update_dialog)
        self.btnDelete.clicked.connect(self.deleteService)
        self.btnSearch.clicked.connect(self.searchService)
        self.btnReset.clicked.connect(self.loadServiceData)

    def show_add_dialog(self):
        dialog = QtWidgets.QDialog()
        self.add_service_dialog = Ui_add_service_dialog()
        self.add_service_dialog.setupUi(dialog)
        self.add_service_dialog.btnAccept.clicked.connect(self.addService)
        dialog.exec_()
        dialog.show()

    def show_update_dialog(self):
        dialog = QtWidgets.QDialog()
        self.add_service_dialog = Ui_add_service_dialog()
        self.add_service_dialog.setupUi(dialog)
        self.add_service_dialog.label_4.setText("SỬA DỊCH VỤ")

        selected_row = self.table_service.currentRow()
        if selected_row < 0:
            msg.show_warning_messagebox("Vui lòng chọn 1 dòng trong bảng dịch vụ")
            return

        selected_items = self.table_service.selectedItems()
        row_data = [item.text() for item in selected_items]
        id = row_data[0]
        name = row_data[1]
        price = row_data[2]
        self.add_service_dialog.txtName.setText(name)
        self.add_service_dialog.txtPrice.setText(price)
        service = Service(id, name, price)

        self.add_service_dialog.btnAccept.clicked.connect(lambda: self.updateService(service))
        dialog.exec_()
        dialog.show()

    def loadServiceData(self):
        dao =serviceDAO()
        services = dao.getAllServices()
        self.fillServiceTable(services)

    def fillServiceTable(self, services):
        row = 0
        self.table_service.setRowCount(len(services))
        for service in services:
            self.table_service.setItem(row, 0, QtWidgets.QTableWidgetItem(str(service.getMaDV())))
            self.table_service.setItem(row, 1, QtWidgets.QTableWidgetItem(service.getTen()))
            self.table_service.setItem(row, 2, QtWidgets.QTableWidgetItem(str(service.getGia())))
            row = row +1

    def addService(self):
        tendv = self.add_service_dialog.txtName.text()
        gia = self.add_service_dialog.txtPrice.text()

        if not tendv or not gia:
            print(f"{tendv} {gia}")
            msg.show_warning_messagebox("Vui lòng nhập đầy đủ thông tin") 
            return
        
        if not gia.isnumeric():
            msg.show_warning_messagebox("Vui lòng chỉ nhập số cho trường giá")
            return

        dao = serviceDAO()
        service = Service(None, tendv, gia)
        dao.insertService(service)  
        msg.show_info_messagebox("Thêm dịch vụ thành công!")
        self.loadServiceData()

    def updateService(self, service):
        tendv = self.add_service_dialog.txtName.text()
        gia = self.add_service_dialog.txtPrice.text()

        if not tendv or not gia:
            print(f"{tendv} {gia}")
            msg.show_warning_messagebox("Vui lòng nhập đầy đủ thông tin") 
            return
        
        if not gia.isnumeric():
            msg.show_warning_messagebox("Vui lòng chỉ nhập số cho trường giá")
            return
        
        dao = serviceDAO()
        service.setTen(tendv)
        service.setGia(gia)
        dao.updateService(service)
        msg.show_info_messagebox("Sửa thông tin dịch vụ thành công!")
        self.loadServiceData()

    def deleteService(self):
        selected_items = self.table_service.selectedItems()
        if selected_items:
            selected_row = selected_items[0].row()
            id = self.table_service.item(selected_row, 0).text()
            dao = serviceDAO()
            dao.deleteService(id)
            msg.show_warning_messagebox("Xóa dịch vụ đã chọn thành công")
            self.loadServiceData()
        else:
            msg.show_warning_messagebox("Vui lòng chọn 1 dòng trong bảng dịch vụ")

    def searchService(self):
        dao = serviceDAO()
        search = self.txtSearchService.text()
        choice = self.cbSearch.currentIndex()
        services = dao.searchService(search, choice)
        self.fillServiceTable(services)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
